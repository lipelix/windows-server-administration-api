@model WinRemoteAdministration.Models.UserRegModel

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-vertical">
        <h1>Create New User</h1>

        @if (ViewBag.ResultType != null) {
        <div class="alert alert-@ViewBag.ResultType alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @ViewBag.ResultMessage
        </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName)
            @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password)
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword)
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-info" />         
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
