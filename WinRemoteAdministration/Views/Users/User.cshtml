<h1>User @ViewBag.UserName</h1>

<ul class="list-group">
    <li class="list-group-item"><strong>Id</strong>: @ViewBag.Id </li>
    <li class="list-group-item"><strong>Email</strong>: @ViewBag.Email </li>
    <li class="list-group-item"><strong>Roles</strong>: @ViewBag.Roles </li>
</ul>

@model WinRemoteAdministration.Models.PasswordResetModel

@if (!ViewBag.IsSupervisor || Request.Cookies["logged_user"].Value.Equals(ViewBag.UserName)) {
using (Html.BeginForm("ResetPassword", "Users")) {
     @Html.AntiForgeryToken()

     <div class="form-vertical">
         <h3>Set new password</h3>

         @if (ViewBag.ResultType != null) {
             <div class="alert alert-@ViewBag.ResultType alert-dismissible" role="alert">
                 <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                 @ViewBag.ResultMessage
             </div>
         }

         @Html.ValidationSummary(true, "", new {@class = "text-danger"})

         <div class="form-group">
             @Html.LabelFor(model => model.Password)
             @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
             @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
         </div>

         <div class="form-group">
             @Html.LabelFor(model => model.ConfirmPassword)
             @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
             @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
         </div>

         @Html.HiddenFor(model => model.UserName, new {@Value = ViewBag.UserName})
         @Html.HiddenFor(model => model.Id, new {@Value = ViewBag.Id})

         <div class="form-group">
             <input type="submit" value="Reset password" class="btn btn-info"/>
         </div>
     </div>
 }
}